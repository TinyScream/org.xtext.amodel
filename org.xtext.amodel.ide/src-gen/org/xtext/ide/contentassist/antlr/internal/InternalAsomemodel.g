/*
 * generated by Xtext 2.10.0
 */
grammar InternalAsomemodel;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.AsomemodelGrammarAccess;

}
@parser::members {
	private AsomemodelGrammarAccess grammarAccess;

	public void setGrammarAccess(AsomemodelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAsomemodel
entryRuleAsomemodel
:
{ before(grammarAccess.getAsomemodelRule()); }
	 ruleAsomemodel
{ after(grammarAccess.getAsomemodelRule()); } 
	 EOF 
;

// Rule Asomemodel
ruleAsomemodel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAsomemodelAccess().getModelParserRuleCall()); }
		ruleModel
		{ after(grammarAccess.getAsomemodelAccess().getModelParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepositoryService
entryRuleRepositoryService
:
{ before(grammarAccess.getRepositoryServiceRule()); }
	 ruleRepositoryService
{ after(grammarAccess.getRepositoryServiceRule()); } 
	 EOF 
;

// Rule RepositoryService
ruleRepositoryService 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepositoryServiceAccess().getGroup()); }
		(rule__RepositoryService__Group__0)
		{ after(grammarAccess.getRepositoryServiceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainInterface
entryRuleDomainInterface
:
{ before(grammarAccess.getDomainInterfaceRule()); }
	 ruleDomainInterface
{ after(grammarAccess.getDomainInterfaceRule()); } 
	 EOF 
;

// Rule DomainInterface
ruleDomainInterface 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainInterfaceAccess().getGroup()); }
		(rule__DomainInterface__Group__0)
		{ after(grammarAccess.getDomainInterfaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataPort
entryRuleDataPort
:
{ before(grammarAccess.getDataPortRule()); }
	 ruleDataPort
{ after(grammarAccess.getDataPortRule()); } 
	 EOF 
;

// Rule DataPort
ruleDataPort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataPortAccess().getGroup()); }
		(rule__DataPort__Group__0)
		{ after(grammarAccess.getDataPortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDatatype
entryRuleDatatype
:
{ before(grammarAccess.getDatatypeRule()); }
	 ruleDatatype
{ after(grammarAccess.getDatatypeRule()); } 
	 EOF 
;

// Rule Datatype
ruleDatatype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDatatypeAccess().getAlternatives()); }
		(rule__Datatype__Alternatives)
		{ after(grammarAccess.getDatatypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity
:
{ before(grammarAccess.getMultiplicityRule()); }
	 ruleMultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityAccess().getGroup()); }
		(rule__Multiplicity__Group__0)
		{ after(grammarAccess.getMultiplicityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueObject
entryRuleValueObject
:
{ before(grammarAccess.getValueObjectRule()); }
	 ruleValueObject
{ after(grammarAccess.getValueObjectRule()); } 
	 EOF 
;

// Rule ValueObject
ruleValueObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueObjectAccess().getGroup()); }
		(rule__ValueObject__Group__0)
		{ after(grammarAccess.getValueObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttri
entryRuleAttri
:
{ before(grammarAccess.getAttriRule()); }
	 ruleAttri
{ after(grammarAccess.getAttriRule()); } 
	 EOF 
;

// Rule Attri
ruleAttri 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttriAccess().getGroup()); }
		(rule__Attri__Group__0)
		{ after(grammarAccess.getAttriAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrder
entryRuleOrder
:
{ before(grammarAccess.getOrderRule()); }
	 ruleOrder
{ after(grammarAccess.getOrderRule()); } 
	 EOF 
;

// Rule Order
ruleOrder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderAccess().getAlternatives()); }
		(rule__Order__Alternatives)
		{ after(grammarAccess.getOrderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getElementAccess().getTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getEntityParserRuleCall_1()); }
		ruleEntity
		{ after(grammarAccess.getElementAccess().getEntityParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getValueObjectParserRuleCall_2()); }
		ruleValueObject
		{ after(grammarAccess.getElementAccess().getValueObjectParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatatypeAccess().getDoubleKeyword_0()); }
		'Double'
		{ after(grammarAccess.getDatatypeAccess().getDoubleKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getDatatypeAccess().getIntKeyword_1()); }
		'Int'
		{ after(grammarAccess.getDatatypeAccess().getIntKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getDatatypeAccess().getStringKeyword_2()); }
		'String'
		{ after(grammarAccess.getDatatypeAccess().getStringKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getNameAssignment_3_0()); }
		(rule__Multiplicity__NameAssignment_3_0)
		{ after(grammarAccess.getMultiplicityAccess().getNameAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicityAccess().getInfKeyword_3_1()); }
		'inf'
		{ after(grammarAccess.getMultiplicityAccess().getInfKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getOrderedKeyword_0()); }
		'ordered'
		{ after(grammarAccess.getOrderAccess().getOrderedKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrderAccess().getUnorderedKeyword_1()); }
		'unordered'
		{ after(grammarAccess.getOrderAccess().getUnorderedKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	'Model'
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRepositoryserviceAssignment_3()); }
	(rule__Model__RepositoryserviceAssignment_3)?
	{ after(grammarAccess.getModelAccess().getRepositoryserviceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDomaininterfaceAssignment_4()); }
	(rule__Model__DomaininterfaceAssignment_4)?
	{ after(grammarAccess.getModelAccess().getDomaininterfaceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepositoryService__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositoryService__Group__0__Impl
	rule__RepositoryService__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryServiceAccess().getRepositoryServiceKeyword_0()); }
	'RepositoryService'
	{ after(grammarAccess.getRepositoryServiceAccess().getRepositoryServiceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositoryService__Group__1__Impl
	rule__RepositoryService__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryServiceAccess().getNameAssignment_1()); }
	(rule__RepositoryService__NameAssignment_1)
	{ after(grammarAccess.getRepositoryServiceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositoryService__Group__2__Impl
	rule__RepositoryService__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryServiceAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRepositoryServiceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositoryService__Group__3__Impl
	rule__RepositoryService__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryServiceAccess().getProvidedKeyword_3()); }
	'Provided'
	{ after(grammarAccess.getRepositoryServiceAccess().getProvidedKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositoryService__Group__4__Impl
	rule__RepositoryService__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryServiceAccess().getDataportAssignment_4()); }
	(rule__RepositoryService__DataportAssignment_4)
	{ after(grammarAccess.getRepositoryServiceAccess().getDataportAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepositoryService__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepositoryServiceAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getRepositoryServiceAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainInterface__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainInterface__Group__0__Impl
	rule__DomainInterface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainInterfaceAccess().getDomainInterfaceKeyword_0()); }
	'DomainInterface'
	{ after(grammarAccess.getDomainInterfaceAccess().getDomainInterfaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainInterface__Group__1__Impl
	rule__DomainInterface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainInterfaceAccess().getNameAssignment_1()); }
	(rule__DomainInterface__NameAssignment_1)
	{ after(grammarAccess.getDomainInterfaceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainInterface__Group__2__Impl
	rule__DomainInterface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainInterfaceAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDomainInterfaceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainInterface__Group__3__Impl
	rule__DomainInterface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainInterfaceAccess().getElementAssignment_3()); }
	(rule__DomainInterface__ElementAssignment_3)*
	{ after(grammarAccess.getDomainInterfaceAccess().getElementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainInterface__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainInterfaceAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDomainInterfaceAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataPort__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPort__Group__0__Impl
	rule__DataPort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPortAccess().getDataPortKeyword_0()); }
	'DataPort'
	{ after(grammarAccess.getDataPortAccess().getDataPortKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPort__Group__1__Impl
	rule__DataPort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPortAccess().getNameAssignment_1()); }
	(rule__DataPort__NameAssignment_1)
	{ after(grammarAccess.getDataPortAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPort__Group__2__Impl
	rule__DataPort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPortAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDataPortAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPort__Group__3__Impl
	rule__DataPort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPortAccess().getInterfacesKeyword_3()); }
	'interfaces'
	{ after(grammarAccess.getDataPortAccess().getInterfacesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPort__Group__4__Impl
	rule__DataPort__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPortAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getDataPortAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPort__Group__5__Impl
	rule__DataPort__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPortAccess().getCrossModelAssignment_5()); }
	(rule__DataPort__CrossModelAssignment_5)
	{ after(grammarAccess.getDataPortAccess().getCrossModelAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPort__Group__6__Impl
	rule__DataPort__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPortAccess().getFullStopKeyword_6()); }
	'.'
	{ after(grammarAccess.getDataPortAccess().getFullStopKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPort__Group__7__Impl
	rule__DataPort__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPortAccess().getCrossInterfaceAssignment_7()); }
	(rule__DataPort__CrossInterfaceAssignment_7)
	{ after(grammarAccess.getDataPortAccess().getCrossInterfaceAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPort__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPortAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getDataPortAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
	'Type'
	{ after(grammarAccess.getTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getDatatypeParserRuleCall_1()); }
	ruleDatatype
	{ after(grammarAccess.getTypeAccess().getDatatypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getTypeAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getImmutableKeyword_0()); }
	'Immutable'
	{ after(grammarAccess.getEntityAccess().getImmutableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNonVolatileKeyword_1()); }
	'NonVolatile'
	{ after(grammarAccess.getEntityAccess().getNonVolatileKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_2()); }
	'Entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_3()); }
	(rule__Entity__NameAssignment_3)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getMultiplicityAssignment_4()); }
	(rule__Entity__MultiplicityAssignment_4)
	{ after(grammarAccess.getEntityAccess().getMultiplicityAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__6__Impl
	rule__Entity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getAttributesKeyword_6()); }
	'attributes'
	{ after(grammarAccess.getEntityAccess().getAttributesKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__7__Impl
	rule__Entity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getEntityAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__8__Impl
	rule__Entity__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getAttriAssignment_8()); }
	(rule__Entity__AttriAssignment_8)*
	{ after(grammarAccess.getEntityAccess().getAttriAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__0__Impl
	rule__Multiplicity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__1__Impl
	rule__Multiplicity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getNameAssignment_1()); }
	(rule__Multiplicity__NameAssignment_1)
	{ after(grammarAccess.getMultiplicityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__2__Impl
	rule__Multiplicity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getMultiplicityAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__3__Impl
	rule__Multiplicity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getAlternatives_3()); }
	(rule__Multiplicity__Alternatives_3)
	{ after(grammarAccess.getMultiplicityAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueObject__Group__0__Impl
	rule__ValueObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueObjectAccess().getValueObjectKeyword_0()); }
	'ValueObject'
	{ after(grammarAccess.getValueObjectAccess().getValueObjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueObject__Group__1__Impl
	rule__ValueObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueObjectAccess().getNameAssignment_1()); }
	(rule__ValueObject__NameAssignment_1)
	{ after(grammarAccess.getValueObjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueObject__Group__2__Impl
	rule__ValueObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueObjectAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getValueObjectAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueObject__Group__3__Impl
	rule__ValueObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueObjectAccess().getAttributesKeyword_3()); }
	'attributes'
	{ after(grammarAccess.getValueObjectAccess().getAttributesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueObject__Group__4__Impl
	rule__ValueObject__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueObjectAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getValueObjectAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueObject__Group__5__Impl
	rule__ValueObject__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueObjectAccess().getAttriAssignment_5()); }
	(rule__ValueObject__AttriAssignment_5)*
	{ after(grammarAccess.getValueObjectAccess().getAttriAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueObject__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueObjectAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getValueObjectAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attri__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attri__Group__0__Impl
	rule__Attri__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttriAccess().getNameAssignment_0()); }
	(rule__Attri__NameAssignment_0)
	{ after(grammarAccess.getAttriAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attri__Group__1__Impl
	rule__Attri__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttriAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAttriAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attri__Group__2__Impl
	rule__Attri__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttriAccess().getCrossModelAssignment_2()); }
	(rule__Attri__CrossModelAssignment_2)
	{ after(grammarAccess.getAttriAccess().getCrossModelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attri__Group__3__Impl
	rule__Attri__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttriAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getAttriAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attri__Group__4__Impl
	rule__Attri__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttriAccess().getCrossInterfaceAssignment_4()); }
	(rule__Attri__CrossInterfaceAssignment_4)
	{ after(grammarAccess.getAttriAccess().getCrossInterfaceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attri__Group__5__Impl
	rule__Attri__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttriAccess().getFullStopKeyword_5()); }
	'.'
	{ after(grammarAccess.getAttriAccess().getFullStopKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attri__Group__6__Impl
	rule__Attri__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttriAccess().getDatatypeAssignment_6()); }
	(rule__Attri__DatatypeAssignment_6)
	{ after(grammarAccess.getAttriAccess().getDatatypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attri__Group__7__Impl
	rule__Attri__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttriAccess().getMultiplicityAssignment_7()); }
	(rule__Attri__MultiplicityAssignment_7)
	{ after(grammarAccess.getAttriAccess().getMultiplicityAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attri__Group__8__Impl
	rule__Attri__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttriAccess().getOrderAssignment_8()); }
	(rule__Attri__OrderAssignment_8)
	{ after(grammarAccess.getAttriAccess().getOrderAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attri__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttriAccess().getSemicolonKeyword_9()); }
	';'
	{ after(grammarAccess.getAttriAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RepositoryserviceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRepositoryserviceRepositoryServiceParserRuleCall_3_0()); }
		ruleRepositoryService
		{ after(grammarAccess.getModelAccess().getRepositoryserviceRepositoryServiceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DomaininterfaceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDomaininterfaceDomainInterfaceParserRuleCall_4_0()); }
		ruleDomainInterface
		{ after(grammarAccess.getModelAccess().getDomaininterfaceDomainInterfaceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryServiceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRepositoryServiceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepositoryService__DataportAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepositoryServiceAccess().getDataportDataPortParserRuleCall_4_0()); }
		ruleDataPort
		{ after(grammarAccess.getRepositoryServiceAccess().getDataportDataPortParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDomainInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInterface__ElementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainInterfaceAccess().getElementElementParserRuleCall_3_0()); }
		ruleElement
		{ after(grammarAccess.getDomainInterfaceAccess().getElementElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataPortAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataPortAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__CrossModelAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataPortAccess().getCrossModelModelCrossReference_5_0()); }
		(
			{ before(grammarAccess.getDataPortAccess().getCrossModelModelIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataPortAccess().getCrossModelModelIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getDataPortAccess().getCrossModelModelCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPort__CrossInterfaceAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataPortAccess().getCrossInterfaceDomainInterfaceCrossReference_7_0()); }
		(
			{ before(grammarAccess.getDataPortAccess().getCrossInterfaceDomainInterfaceIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDataPortAccess().getCrossInterfaceDomainInterfaceIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getDataPortAccess().getCrossInterfaceDomainInterfaceCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__MultiplicityAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getMultiplicityMultiplicityParserRuleCall_4_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getEntityAccess().getMultiplicityMultiplicityParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttriAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getAttriAttriParserRuleCall_8_0()); }
		ruleAttri
		{ after(grammarAccess.getEntityAccess().getAttriAttriParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getNameINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getMultiplicityAccess().getNameINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__NameAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getNameINTTerminalRuleCall_3_0_0()); }
		RULE_INT
		{ after(grammarAccess.getMultiplicityAccess().getNameINTTerminalRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueObjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getValueObjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__AttriAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueObjectAccess().getAttriAttriParserRuleCall_5_0()); }
		ruleAttri
		{ after(grammarAccess.getValueObjectAccess().getAttriAttriParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttriAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttriAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__CrossModelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttriAccess().getCrossModelModelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAttriAccess().getCrossModelModelIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttriAccess().getCrossModelModelIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAttriAccess().getCrossModelModelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__CrossInterfaceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttriAccess().getCrossInterfaceDomainInterfaceCrossReference_4_0()); }
		(
			{ before(grammarAccess.getAttriAccess().getCrossInterfaceDomainInterfaceIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttriAccess().getCrossInterfaceDomainInterfaceIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getAttriAccess().getCrossInterfaceDomainInterfaceCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__DatatypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttriAccess().getDatatypeDatatypeParserRuleCall_6_0()); }
		ruleDatatype
		{ after(grammarAccess.getAttriAccess().getDatatypeDatatypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__MultiplicityAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttriAccess().getMultiplicityMultiplicityParserRuleCall_7_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getAttriAccess().getMultiplicityMultiplicityParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attri__OrderAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttriAccess().getOrderOrderParserRuleCall_8_0()); }
		ruleOrder
		{ after(grammarAccess.getAttriAccess().getOrderOrderParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
