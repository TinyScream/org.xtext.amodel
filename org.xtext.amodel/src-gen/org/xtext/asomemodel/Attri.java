/**
 * generated by Xtext 2.10.0
 */
package org.xtext.asomemodel;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Attri</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.asomemodel.Attri#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.asomemodel.Attri#getCrossModel <em>Cross Model</em>}</li>
 *   <li>{@link org.xtext.asomemodel.Attri#getCrossInterface <em>Cross Interface</em>}</li>
 *   <li>{@link org.xtext.asomemodel.Attri#getDatatype <em>Datatype</em>}</li>
 *   <li>{@link org.xtext.asomemodel.Attri#getMultiplicity <em>Multiplicity</em>}</li>
 *   <li>{@link org.xtext.asomemodel.Attri#getOrder <em>Order</em>}</li>
 * </ul>
 *
 * @see org.xtext.asomemodel.AsomemodelPackage#getAttri()
 * @model
 * @generated
 */
public interface Attri extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see org.xtext.asomemodel.AsomemodelPackage#getAttri_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link org.xtext.asomemodel.Attri#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Cross Model</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Cross Model</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cross Model</em>' reference.
   * @see #setCrossModel(Model)
   * @see org.xtext.asomemodel.AsomemodelPackage#getAttri_CrossModel()
   * @model
   * @generated
   */
  Model getCrossModel();

  /**
   * Sets the value of the '{@link org.xtext.asomemodel.Attri#getCrossModel <em>Cross Model</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cross Model</em>' reference.
   * @see #getCrossModel()
   * @generated
   */
  void setCrossModel(Model value);

  /**
   * Returns the value of the '<em><b>Cross Interface</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Cross Interface</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cross Interface</em>' reference.
   * @see #setCrossInterface(DomainInterface)
   * @see org.xtext.asomemodel.AsomemodelPackage#getAttri_CrossInterface()
   * @model
   * @generated
   */
  DomainInterface getCrossInterface();

  /**
   * Sets the value of the '{@link org.xtext.asomemodel.Attri#getCrossInterface <em>Cross Interface</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cross Interface</em>' reference.
   * @see #getCrossInterface()
   * @generated
   */
  void setCrossInterface(DomainInterface value);

  /**
   * Returns the value of the '<em><b>Datatype</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Datatype</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Datatype</em>' attribute.
   * @see #setDatatype(String)
   * @see org.xtext.asomemodel.AsomemodelPackage#getAttri_Datatype()
   * @model
   * @generated
   */
  String getDatatype();

  /**
   * Sets the value of the '{@link org.xtext.asomemodel.Attri#getDatatype <em>Datatype</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Datatype</em>' attribute.
   * @see #getDatatype()
   * @generated
   */
  void setDatatype(String value);

  /**
   * Returns the value of the '<em><b>Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Multiplicity</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Multiplicity</em>' containment reference.
   * @see #setMultiplicity(Multiplicity)
   * @see org.xtext.asomemodel.AsomemodelPackage#getAttri_Multiplicity()
   * @model containment="true"
   * @generated
   */
  Multiplicity getMultiplicity();

  /**
   * Sets the value of the '{@link org.xtext.asomemodel.Attri#getMultiplicity <em>Multiplicity</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Multiplicity</em>' containment reference.
   * @see #getMultiplicity()
   * @generated
   */
  void setMultiplicity(Multiplicity value);

  /**
   * Returns the value of the '<em><b>Order</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Order</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Order</em>' attribute.
   * @see #setOrder(String)
   * @see org.xtext.asomemodel.AsomemodelPackage#getAttri_Order()
   * @model
   * @generated
   */
  String getOrder();

  /**
   * Sets the value of the '{@link org.xtext.asomemodel.Attri#getOrder <em>Order</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Order</em>' attribute.
   * @see #getOrder()
   * @generated
   */
  void setOrder(String value);

} // Attri
